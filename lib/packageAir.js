// Generated by CoffeeScript 1.6.2
var addRegularArgument, addRegularArguments, exec, executeJar, fs, getFlexHome, inQuotes, path, _ref;

_ref = require('./utils'), getFlexHome = _ref.getFlexHome, addRegularArguments = _ref.addRegularArguments, inQuotes = _ref.inQuotes, executeJar = _ref.executeJar, addRegularArgument = _ref.addRegularArgument;

exec = require('child_process').exec;

fs = require('fs');

path = require('path');

module.exports = function(args, root, onComplete) {
  var argList, cFiles, e, eFiles, ext, extdir, filePath, flexHome, pathInfo, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref1, _ref2;

  flexHome = getFlexHome(args);
  argList = ["-package"];
  try {
    argList.push("-target " + args.target);
    if (args.storetype == null) {
      ext = path.extname(args.keystore);
      args.storetype = (function() {
        if (ext === ".keystore") {
          return "jks";
        } else if (ext === ".p12" || ext === ".pfx") {
          return "pkcs12";
        } else {
          throw "No keystore type defined";
        }
      })();
    }
    argList.push("-storetype " + args.storetype);
    argList.push(addRegularArgument("keystore", args.keystore, " "));
    argList.push(addRegularArgument("storepass", args.storepass, " "));
    addRegularArguments(args, argList, " ", "version", "extDirs", "app-id", "keystore", "storepass", "flexHome", "mainFile", "inputDescriptor", "target", "output", "storetype", "paths", "package-file-name", "descriptor");
    argList.push(inQuotes(args.output));
    argList.push(inQuotes(args.descriptor));
    eFiles = [];
    cFiles = [];
    if (args.paths != null) {
      _ref1 = args.paths;
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        pathInfo = _ref1[_i];
        filePath = path.resolve(root, pathInfo['file-path']);
        try {
          if (args.target === 'ane' || fs.statSync(filePath).isDirectory()) {
            cFiles.push(pathInfo);
          } else {
            eFiles.push(pathInfo);
          }
        } catch (_error) {
          e = _error;
          console.info("Warning: Tried to add non-existing file " + filePath);
        }
      }
    }
    for (_j = 0, _len1 = eFiles.length; _j < _len1; _j++) {
      pathInfo = eFiles[_j];
      argList.push("-e " + inQuotes(pathInfo['file-path']) + " " + inQuotes(pathInfo['path-in-package']));
    }
    for (_k = 0, _len2 = cFiles.length; _k < _len2; _k++) {
      pathInfo = cFiles[_k];
      argList.push("-C " + inQuotes(path.dirname(pathInfo['file-path'])) + " " + inQuotes(path.basename(pathInfo['file-path'])));
    }
    _ref2 = args.extDirs;
    for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {
      extdir = _ref2[_l];
      argList.push(addRegularArgument("extdir", args.extDirs, " "));
    }
  } catch (_error) {
    e = _error;
    onComplete(e);
    return;
  }
  return executeJar("" + flexHome + "/lib/adt.jar", argList.join(" "), root, onComplete);
};
